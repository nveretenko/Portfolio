!function(r,a,l,h){function c(t,i){var e=this;"object"==typeof i&&(delete i.refresh,delete i.render,r.extend(this,i)),this.$element=r(t),!this.imageSrc&&this.$element.is("img")&&(this.imageSrc=this.$element.attr("src"));var o=(this.position+"").toLowerCase().match(/\S+/g)||[];if(o.length<1&&o.push("center"),1==o.length&&o.push(o[0]),"top"!=o[0]&&"bottom"!=o[0]&&"left"!=o[1]&&"right"!=o[1]||(o=[o[1],o[0]]),this.positionX!==h&&(o[0]=this.positionX.toLowerCase()),this.positionY!==h&&(o[1]=this.positionY.toLowerCase()),e.positionX=o[0],e.positionY=o[1],"left"!=this.positionX&&"right"!=this.positionX&&(isNaN(parseInt(this.positionX))?this.positionX="center":this.positionX=parseInt(this.positionX)),"top"!=this.positionY&&"bottom"!=this.positionY&&(isNaN(parseInt(this.positionY))?this.positionY="center":this.positionY=parseInt(this.positionY)),this.position=this.positionX+(isNaN(this.positionX)?"":"px")+" "+this.positionY+(isNaN(this.positionY)?"":"px"),navigator.userAgent.match(/(iPod|iPhone|iPad)/))return this.imageSrc&&this.iosFix&&!this.$element.is("img")&&this.$element.css({backgroundImage:'url("'+this.imageSrc+'")',backgroundSize:"cover",backgroundPosition:this.position}),this;if(navigator.userAgent.match(/(Android)/))return this.imageSrc&&this.androidFix&&!this.$element.is("img")&&this.$element.css({backgroundImage:'url("'+this.imageSrc+'")',backgroundSize:"cover",backgroundPosition:this.position}),this;this.$mirror=r("<div />").prependTo(this.mirrorContainer);var n=this.$element.find(">.parallax-slider"),s=!1;0==n.length?this.$slider=r("<img />").prependTo(this.$mirror):(this.$slider=n.prependTo(this.$mirror),s=!0),this.$mirror.addClass("parallax-mirror").css({visibility:"hidden",zIndex:this.zIndex,position:"fixed",top:0,left:0,overflow:"hidden"}),this.$slider.addClass("parallax-slider").one("load",function(){e.naturalHeight&&e.naturalWidth||(e.naturalHeight=this.naturalHeight||this.height||1,e.naturalWidth=this.naturalWidth||this.width||1),e.aspectRatio=e.naturalWidth/e.naturalHeight,c.isSetup||c.setup(),c.sliders.push(e),c.isFresh=!1,c.requestRender()}),s||(this.$slider[0].src=this.imageSrc),(this.naturalHeight&&this.naturalWidth||this.$slider[0].complete||0<n.length)&&this.$slider.trigger("load")}!function(){for(var n=0,t=["ms","moz","webkit","o"],i=0;i<t.length&&!a.requestAnimationFrame;++i)a.requestAnimationFrame=a[t[i]+"RequestAnimationFrame"],a.cancelAnimationFrame=a[t[i]+"CancelAnimationFrame"]||a[t[i]+"CancelRequestAnimationFrame"];a.requestAnimationFrame||(a.requestAnimationFrame=function(t){var i=(new Date).getTime(),e=Math.max(0,16-(i-n)),o=a.setTimeout(function(){t(i+e)},e);return n=i+e,o}),a.cancelAnimationFrame||(a.cancelAnimationFrame=function(t){clearTimeout(t)})}(),r.extend(c.prototype,{speed:.2,bleed:0,zIndex:-100,iosFix:!0,androidFix:!0,position:"center",overScrollFix:!1,mirrorContainer:"body",refresh:function(){this.boxWidth=this.$element.outerWidth(),this.boxHeight=this.$element.outerHeight()+2*this.bleed,this.boxOffsetTop=this.$element.offset().top-this.bleed,this.boxOffsetLeft=this.$element.offset().left,this.boxOffsetBottom=this.boxOffsetTop+this.boxHeight;var t,i=c.winHeight,e=c.docHeight,o=Math.min(this.boxOffsetTop,e-i),n=Math.max(this.boxOffsetTop+this.boxHeight-i,0),s=this.boxHeight+(o-n)*(1-this.speed)|0,r=(this.boxOffsetTop-o)*(1-this.speed)|0;s*this.aspectRatio>=this.boxWidth?(this.imageWidth=s*this.aspectRatio|0,this.imageHeight=s,this.offsetBaseTop=r,t=this.imageWidth-this.boxWidth,"left"==this.positionX?this.offsetLeft=0:"right"==this.positionX?this.offsetLeft=-t:isNaN(this.positionX)?this.offsetLeft=-t/2|0:this.offsetLeft=Math.max(this.positionX,-t)):(this.imageWidth=this.boxWidth,this.imageHeight=this.boxWidth/this.aspectRatio|0,this.offsetLeft=0,t=this.imageHeight-s,"top"==this.positionY?this.offsetBaseTop=r:"bottom"==this.positionY?this.offsetBaseTop=r-t:isNaN(this.positionY)?this.offsetBaseTop=r-t/2|0:this.offsetBaseTop=r+Math.max(this.positionY,-t))},render:function(){var t=c.scrollTop,i=c.scrollLeft,e=this.overScrollFix?c.overScroll:0,o=t+c.winHeight;this.boxOffsetBottom>t&&this.boxOffsetTop<=o?(this.visibility="visible",this.mirrorTop=this.boxOffsetTop-t,this.mirrorLeft=this.boxOffsetLeft-i,this.offsetTop=this.offsetBaseTop-this.mirrorTop*(1-this.speed)):this.visibility="hidden",this.$mirror.css({transform:"translate3d("+this.mirrorLeft+"px, "+(this.mirrorTop-e)+"px, 0px)",visibility:this.visibility,height:this.boxHeight,width:this.boxWidth}),this.$slider.css({transform:"translate3d("+this.offsetLeft+"px, "+this.offsetTop+"px, 0px)",position:"absolute",height:this.imageHeight,width:this.imageWidth,maxWidth:"none"})}}),r.extend(c,{scrollTop:0,scrollLeft:0,winHeight:0,winWidth:0,docHeight:1<<30,docWidth:1<<30,sliders:[],isReady:!1,isFresh:!1,isBusy:!1,setup:function(){if(!this.isReady){var i=this,t=r(l),o=r(a),e=function(){c.winHeight=o.height(),c.winWidth=o.width(),c.docHeight=t.height(),c.docWidth=t.width()},n=function(){var t=o.scrollTop(),i=c.docHeight-c.winHeight,e=c.docWidth-c.winWidth;c.scrollTop=Math.max(0,Math.min(i,t)),c.scrollLeft=Math.max(0,Math.min(e,o.scrollLeft())),c.overScroll=Math.max(t-i,Math.min(t,0))};o.on("resize.px.parallax load.px.parallax",function(){e(),i.refresh(),c.isFresh=!1,c.requestRender()}).on("scroll.px.parallax load.px.parallax",function(){n(),c.requestRender()}),e(),n(),this.isReady=!0;var s=-1;!function t(){if(s==a.pageYOffset)return a.requestAnimationFrame(t),!1;s=a.pageYOffset,i.render(),a.requestAnimationFrame(t)}()}},configure:function(t){"object"==typeof t&&(delete t.refresh,delete t.render,r.extend(this.prototype,t))},refresh:function(){r.each(this.sliders,function(){this.refresh()}),this.isFresh=!0},render:function(){this.isFresh||this.refresh(),r.each(this.sliders,function(){this.render()})},requestRender:function(){this.render(),this.isBusy=!1},destroy:function(t){var i,e=r(t).data("px.parallax");for(e.$mirror.remove(),i=0;i<this.sliders.length;i+=1)this.sliders[i]==e&&this.sliders.splice(i,1);r(t).data("px.parallax",!1),0===this.sliders.length&&(r(a).off("scroll.px.parallax resize.px.parallax load.px.parallax"),this.isReady=!1,c.isSetup=!1)}});var t=r.fn.parallax;r.fn.parallax=function(e){return this.each(function(){var t=r(this),i="object"==typeof e&&e;this==a||this==l||t.is("body")?c.configure(i):t.data("px.parallax")?"object"==typeof e&&r.extend(t.data("px.parallax"),i):(i=r.extend({},t.data(),i),t.data("px.parallax",new c(this,i))),"string"==typeof e&&("destroy"==e?c.destroy(this):c[e]())})},r.fn.parallax.Constructor=c,r.fn.parallax.noConflict=function(){return r.fn.parallax=t,this},r(function(){r('[data-parallax="scroll"]').parallax()})}(jQuery,window,document),function(o){o.fn.animated=function(i,e){o(this).css("opacity","0").addClass("animated").waypoint(function(t){"down"===t?o(this).removeClass(e).addClass(i).css("opacity","1"):o(this).removeClass(i).addClass(e).css("opacity","1")},{offset:"80%"}).waypoint(function(t){"down"===t?o(this).removeClass(i).addClass(e).css("opacity","1"):o(this).removeClass(e).addClass(i).css("opacity","1")},{offset:-o(window).height()})}}(jQuery),$(document).ready(function(){var e=$(".overlay"),t=$(".js-open-modal"),i=$(".modal-close, .overlay"),o=$(".popup");t.click(function(t){t.preventDefault();var i=$(this).attr("href");e.fadeIn(function(){$(i).css("display","block").animate({opacity:1,top:"48%"},200)})}),i.click(function(){o.animate({opacity:0,top:"45%"},200,function(){$(this).css("display","none"),e.fadeOut()})})}),function(){var i,e,t=[].indexOf||function(t){for(var i=0,e=this.length;i<e;i++)if(i in this&&this[i]===t)return i;return-1},v=[].slice;i=window,e=function(l,s){var i,r,a,h,e,c,f,n,u,o,d,p,m,g,x,y;return i=l(s),n=0<=t.call(s,"ontouchstart"),h={horizontal:{},vertical:{}},f={},c="waypoints-context-id",d="resize.waypoints",p="scroll.waypoints",m=e=1,g="waypoints-waypoint-ids",x="waypoint",y="waypoints",r=function(){function t(t){var i=this;this.$element=t,this.element=t[0],this.didResize=!1,this.didScroll=!1,this.id="context"+e++,this.oldScroll={x:t.scrollLeft(),y:t.scrollTop()},this.waypoints={horizontal:{},vertical:{}},this.element[c]=this.id,f[this.id]=this,t.bind(p,function(){var t;if(!i.didScroll&&!n)return i.didScroll=!0,t=function(){return i.doScroll(),i.didScroll=!1},s.setTimeout(t,l[y].settings.scrollThrottle)}),t.bind(d,function(){var t;if(!i.didResize)return i.didResize=!0,t=function(){return l[y]("refresh"),i.didResize=!1},s.setTimeout(t,l[y].settings.resizeThrottle)})}return t.prototype.doScroll=function(){var t,o=this;return t={horizontal:{newScroll:this.$element.scrollLeft(),oldScroll:this.oldScroll.x,forward:"right",backward:"left"},vertical:{newScroll:this.$element.scrollTop(),oldScroll:this.oldScroll.y,forward:"down",backward:"up"}},!n||t.vertical.oldScroll&&t.vertical.newScroll||l[y]("refresh"),l.each(t,function(t,n){var e,i,s;return s=[],i=n.newScroll>n.oldScroll,e=i?n.forward:n.backward,l.each(o.waypoints[t],function(t,i){var e,o;return n.oldScroll<(e=i.offset)&&e<=n.newScroll?s.push(i):n.newScroll<(o=i.offset)&&o<=n.oldScroll?s.push(i):void 0}),s.sort(function(t,i){return t.offset-i.offset}),i||s.reverse(),l.each(s,function(t,i){if(i.options.continuous||t===s.length-1)return i.trigger([e])})}),this.oldScroll={x:t.horizontal.newScroll,y:t.vertical.newScroll}},t.prototype.refresh=function(){var t,i,e,o=this;return e=l.isWindow(this.element),i=this.$element.offset(),this.doScroll(),t={horizontal:{contextOffset:e?0:i.left,contextScroll:e?0:this.oldScroll.x,contextDimension:this.$element.width(),oldScroll:this.oldScroll.x,forward:"right",backward:"left",offsetProp:"left"},vertical:{contextOffset:e?0:i.top,contextScroll:e?0:this.oldScroll.y,contextDimension:e?l[y]("viewportHeight"):this.$element.height(),oldScroll:this.oldScroll.y,forward:"down",backward:"up",offsetProp:"top"}},l.each(t,function(t,a){return l.each(o.waypoints[t],function(t,i){var e,o,n,s,r;if(e=i.options.offset,n=i.offset,o=l.isWindow(i.element)?0:i.$element.offset()[a.offsetProp],l.isFunction(e)?e=e.apply(i.element):"string"==typeof e&&(e=parseFloat(e),-1<i.options.offset.indexOf("%")&&(e=Math.ceil(a.contextDimension*e/100))),i.offset=o-a.contextOffset+a.contextScroll-e,(!i.options.onlyOnScroll||null==n)&&i.enabled)return null!==n&&n<(s=a.oldScroll)&&s<=i.offset?i.trigger([a.backward]):null!==n&&n>(r=a.oldScroll)&&r>=i.offset?i.trigger([a.forward]):null===n&&a.oldScroll>=i.offset?i.trigger([a.forward]):void 0})})},t.prototype.checkEmpty=function(){if(l.isEmptyObject(this.waypoints.horizontal)&&l.isEmptyObject(this.waypoints.vertical))return this.$element.unbind([d,p].join(" ")),delete f[this.id]},t}(),a=function(){function t(t,i,e){var o,n;"bottom-in-view"===e.offset&&(e.offset=function(){var t;return t=l[y]("viewportHeight"),l.isWindow(i.element)||(t=i.$element.height()),t-l(this).outerHeight()}),this.$element=t,this.element=t[0],this.axis=e.horizontal?"horizontal":"vertical",this.callback=e.handler,this.context=i,this.enabled=e.enabled,this.id="waypoints"+m++,this.offset=null,this.options=e,i.waypoints[this.axis][this.id]=this,(o=null!=(n=(h[this.axis][this.id]=this).element[g])?n:[]).push(this.id),this.element[g]=o}return t.prototype.trigger=function(t){if(this.enabled)return null!=this.callback&&this.callback.apply(this.element,t),this.options.triggerOnce?this.destroy():void 0},t.prototype.disable=function(){return this.enabled=!1},t.prototype.enable=function(){return this.context.refresh(),this.enabled=!0},t.prototype.destroy=function(){return delete h[this.axis][this.id],delete this.context.waypoints[this.axis][this.id],this.context.checkEmpty()},t.getWaypointsByElement=function(t){var i,e;return(e=t[g])?(i=l.extend({},h.horizontal,h.vertical),l.map(e,function(t){return i[t]})):[]},t}(),o={init:function(t,n){return null==(n=l.extend({},l.fn[x].defaults,n)).handler&&(n.handler=t),this.each(function(){var t,i,e,o;return t=l(this),e=null!=(o=n.context)?o:l.fn[x].defaults.context,l.isWindow(e)||(e=t.closest(e)),e=l(e),(i=f[e[0][c]])||(i=new r(e)),new a(t,i,n)}),l[y]("refresh"),this},disable:function(){return o._invoke.call(this,"disable")},enable:function(){return o._invoke.call(this,"enable")},destroy:function(){return o._invoke.call(this,"destroy")},prev:function(t,i){return o._traverse.call(this,t,i,function(t,i,e){if(0<i)return t.push(e[i-1])})},next:function(t,i){return o._traverse.call(this,t,i,function(t,i,e){if(i<e.length-1)return t.push(e[i+1])})},_traverse:function(i,t,e){var o,n;return null==i&&(i="vertical"),null==t&&(t=s),n=u.aggregate(t),o=[],this.each(function(){var t;return t=l.inArray(this,n[i]),e(o,t,n[i])}),this.pushStack(o)},_invoke:function(e){return this.each(function(){var t;return t=a.getWaypointsByElement(this),l.each(t,function(t,i){return i[e](),!0})}),this}},l.fn[x]=function(){var t,i;return i=arguments[0],t=2<=arguments.length?v.call(arguments,1):[],o[i]?o[i].apply(this,t):l.isFunction(i)?o.init.apply(this,arguments):l.isPlainObject(i)?o.init.apply(this,[null,i]):i?l.error("The "+i+" method does not exist in jQuery Waypoints."):l.error("jQuery Waypoints needs a callback function or handler option.")},l.fn[x].defaults={context:s,continuous:!0,enabled:!0,horizontal:!1,offset:0,triggerOnce:!1},u={refresh:function(){return l.each(f,function(t,i){return i.refresh()})},viewportHeight:function(){var t;return null!=(t=s.innerHeight)?t:i.height()},aggregate:function(t){var i,o,e;return i=h,t&&(i=null!=(e=f[l(t)[0][c]])?e.waypoints:void 0),i?(o={horizontal:[],vertical:[]},l.each(o,function(t,e){return l.each(i[t],function(t,i){return e.push(i)}),e.sort(function(t,i){return t.offset-i.offset}),o[t]=l.map(e,function(t){return t.element}),o[t]=l.unique(o[t])}),o):[]},above:function(t){return null==t&&(t=s),u._filter(t,"vertical",function(t,i){return i.offset<=t.oldScroll.y})},below:function(t){return null==t&&(t=s),u._filter(t,"vertical",function(t,i){return i.offset>t.oldScroll.y})},left:function(t){return null==t&&(t=s),u._filter(t,"horizontal",function(t,i){return i.offset<=t.oldScroll.x})},right:function(t){return null==t&&(t=s),u._filter(t,"horizontal",function(t,i){return i.offset>t.oldScroll.x})},enable:function(){return u._invoke("enable")},disable:function(){return u._invoke("disable")},destroy:function(){return u._invoke("destroy")},extendFn:function(t,i){return o[t]=i},_invoke:function(e){var t;return t=l.extend({},h.vertical,h.horizontal),l.each(t,function(t,i){return i[e](),!0})},_filter:function(t,i,e){var o,n;return(o=f[l(t)[0][c]])?(n=[],l.each(o.waypoints[i],function(t,i){if(e(o,i))return n.push(i)}),n.sort(function(t,i){return t.offset-i.offset}),l.map(n,function(t){return t.element})):[]}},l[y]=function(){var t,i;return i=arguments[0],t=2<=arguments.length?v.call(arguments,1):[],u[i]?u[i].apply(null,t):u.aggregate.call(null,i)},l[y].settings={resizeThrottle:100,scrollThrottle:30},i.on("load.waypoints",function(){return l[y]("refresh")})},"function"==typeof define&&define.amd?define("waypoints",["jquery"],function(t){return e(t,i)}):e(i.jQuery,i)}.call(this),$(document).ready(function(){$(".logo h1, .about h3, .contacts h3, .content__item").animated("fadeInUp","fadeOut")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
